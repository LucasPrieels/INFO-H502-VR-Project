#version 330 core

// We can either use translation as input (for Instanced drawing), or model as uniform

layout (location = 0) in vec3 position;
layout (location = 1) in vec2 texture_coordinate;
layout (location = 2) in vec3 normal;
layout (location = 3) in vec3 translation;

out vec2 texture_coord_transferred; // Transferred from vertex shader to fragment shader
out vec3 fragment_pos_transferred;
out vec3 normal_transferred;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main(){
	if (abs(model[3][0]) + abs(model[3][1]) + abs(model[3][2]) < 0.01) gl_Position = projection*view*vec4(position+translation, 1.0);
	// If there is a translation in "model", we use this uniform. Otherwise, we use "translation" input INSTEAD (never both)
	else gl_Position = projection*view*model*vec4(position, 1.0);
    texture_coord_transferred = texture_coordinate;
    fragment_pos_transferred = vec3(vec4(position+translation, 1.0));
    normal_transferred = normal;
}