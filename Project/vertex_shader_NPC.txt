#version 330 core

layout(location = 0) in vec3 pos;
layout(location = 1) in vec3 norm;
layout(location = 2) in vec2 tex;
layout(location = 3) in vec4 boneIds; // In practice bone IDs are int but they are passed as float to be more consistent with the other variables

uniform mat4 projection;
uniform mat4 view;
uniform mat4 model;

const int MAX_BONES = 100;
const int MAX_BONE_INFLUENCE = 4;
uniform mat4 finalBonesMatrices[MAX_BONES];

out vec2 TexCoords;

void main()
{
    vec4 totalPosition = vec4(0.0f);
    for(int i = 0 ; i < MAX_BONE_INFLUENCE ; i++){
        if(int(boneIds[i]) == -1) continue;
        vec4 localPosition = finalBonesMatrices[int(boneIds[i])] * vec4(pos,1.0f);
        totalPosition += localPosition * 0.15;
        vec3 localNormal = mat3(finalBonesMatrices[int(boneIds[i])]) * norm;
   }

    mat4 viewModel = view * model;
    gl_Position =  projection * viewModel * totalPosition;
	TexCoords = tex;
}